<<<?xml version="1.0" encoding="UTF-8" ?>>>

stylesheet \
  -xmlns:xml=http://www.w3.org/XML/1998/namespace \
  -xmlns:xsl=http://www.w3.org/1999/XSL/Transform \
  -xmlns:pg=http://schema.quizbowl.technology/xml/pg-dictionary \
  -xmlns=http://www.w3.org/1999/xhtml \
  -xmlns:html=http://www.w3.org/1999/xhtml \
  -xpath-default-namespace=http://www.w3.org/1999/xhtml \
  -version=2.0

  import pg-dictionary.xsl

  variable htmlns 'http://www.w3.org/1999/xhtml'
  variable pageId tokenize(tokenize(base-uri(),'/')[last()],'\.')[1]

  template / -xpath-default-namespace=http://schema.quizbowl.technology/xml/pg-dictionary
    variable page $sitemap//page[@id=$pageId]
    call-template skeleton
      with-param view $page/@id -tunnel=yes
      with-param page $page -tunnel=yes

  template html:*|html:*/@* -priority=-2
    copy
      apply-templates @*|node()

  ,viewLink tag viewName prefix =
    template <(,tag)>
      call-template viewLink
        with view
          ,viewName
        with prefix
          ,prefix

  ,viewLink l    index    <()>
  ,viewLink cat  category ^
  ,viewLink lang lang     ^

  templateN viewLink
    param view
    param prefix
    a {$view}.html#{$prefix}{.} link
      apply-templates

  template countEntries
    variable dictionary document('pg-dictionary.xml') -as=document-node()
    variable author @author
    variable count
      choose
        when $author
          value-of count($dictionary/pg:pg-dictionary/pg:entry[pg:meta/pg:author/text()=$author])
        otherwise
          value-of count($dictionary/pg:pg-dictionary/pg:entry)
    value-of format-number($count,'#,##0')
